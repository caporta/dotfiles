# Source .bashrc
if [ -f ~/.bashrc ]; then
  . ~/.bashrc
fi

# change umask to make directory sharing easier
umask 0002

# Revert to traditional ASCII collation order (not necessary for Mac OS)
# export LANG=POSIX

export HISTCONTROL=ignoredups
export HISTSIZE=10000

# aliases
alias cls="clear"
alias dc='docker-compose'
alias grep="grep --color"; export GREP_COLOR='0;31'
alias logwatch="tail -f /var/log/system.log"
alias ls="ls -G"; export LSCOLORS="bxex"
alias lsl="ls -lFaith"
alias pgconf="nvim /usr/local/var/postgres/postgresql.conf";
alias profile="nvim $HOME/.bash_profile"
alias sp=". $HOME/.bash_profile"
alias vi="nvim"
alias vim="nvim"
alias vinit="nvim $HOME/.config/nvim/init.vim"
alias tconf="nvim $HOME/.tmux.conf"

# functions
grab () {
  ps aux | grep $1
}

serve () {
  python -m http.server $1
}

port () {
  lsof -i :$1
}

ds () {
  echo "Disk Space Utilization for $HOSTNAME"
  df -h
}

file_info () {
  if [[ -e $1 ]]; then
    echo -e "\nFile Type:"
    file $1
    echo -e "\nFile Status:"
    stat $1
  else
    echo "$FUNCNAME: usage: $FUNCNAME file" >&2
    return 1
  fi
}

twigremote () {
  for k in `git branch -r | grep -v HEAD | perl -pe 's/^..(.*?)( ->.*)?$/\1/'`; do
    echo -e `git show --pretty=format:"%Cgreen%ci %Cblue%cr%Creset" $k -- | head -n 1`\\t$k
  done | sort -r
}

# jenv (configure JVM in jenv with `jenv add /Library/Java/JavaVirtualMachines/<version>/Contents/Home`)
if which jenv > /dev/null; then eval "$(jenv init -)"; fi

# rbenv
if which rbenv > /dev/null; then eval "$(rbenv init -)"; fi

# pyenv
if which pyenv > /dev/null; then eval "$(pyenv init -)"; fi
if which pyenv-virtualenv-init > /dev/null; then eval "$(pyenv virtualenv-init -)"; fi

export PIP_REQUIRE_VIRTUALENV=true
gpip(){
  PIP_REQUIRE_VIRTUALENV="" pip "$@"
}

# postgres
export PGDATA='/usr/local/var/postgres'
export PGHOST=localhost

# editor
export VISUAL=/usr/local/bin/nvim
export EDITOR=/usr/local/bin/nvim

# git
source ~/.git-completion.bash
source ~/.git-prompt.sh
export GIT_PS1_SHOWDIRTYSTATE=1
export GIT_PS1_SHOWCOLORHINTS=1

# unstyled colors
reset=$(tput sgr0)
black=$(tput setaf 0)
red=$(tput setaf 1)
green=$(tput setaf 2)
yellow=$(tput setaf 3)
blue=$(tput setaf 4)
magenta=$(tput setaf 5)
cyan=$(tput setaf 6)
white=$(tput setaf 7)

# Normal colors
txtblk=$reset$black
txtred=$reset$red
txtgrn=$reset$green
txtylw=$reset$yellow
txtblu=$reset$blue
txtmag=$reset$magenta
txtcyn=$reset$cyan
txtwht=$reset$white

# prompt
export PS1='\[$txtwht\]\W$(__git_ps1 " \[$txtylw\](%s)") \[$txtgrn\]Î»\[$reset\] '

#tracing
export PS4='$LINENO + '

# path
export PATH=~/Development/bin:"$PATH"
export PATH
